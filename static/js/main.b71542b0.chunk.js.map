{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","console","log","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b71542b0.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li> */}\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button cla\r\n                        ssName=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n  };","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked: \" +  text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase\",\"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{ \r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lowercase\",\"success\");\r\n\r\n    }\r\n\r\n    const handleClearClick = ()=>{ \r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text cleared\",\"success\");\r\n\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    // Credits: A\r\n    const handleCopy = () => {\r\n        console.log(\"I am copy\");\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        text.setSelectionRange(0, 9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clipboard\",\"success\");\r\n\r\n    }\r\n\r\n    // Credits: Coding Wala\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Removed extraspaces\",\"success\");\r\n\r\n    }\r\n\r\n    const [text, setText] = useState(''); \r\n    // text = \"new text\"; // Wrong way to change the state\r\n    // setText(\"new text\"); // Correct way to change the state\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}> \r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\"> \r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 *  text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n      props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> :{props.alert.msg} \r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n   const [alert, setAlert]=useState(null);\n\n   const showAlert=(message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },1500)\n    \n   }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode has been enabled\",\"success\");\n      document.title='Textutis- Dark Mode';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\",\"success\")\n      document.title='Textutis- Light Mode';\n    \n    }\n  }\n  return (\n    <>\n    {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n    {/* <Navbar/> */}\n    {/* <Navbar title=\"TextUtils\" /> */}\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n      {/* <Switch> */}\n        {/* <Route exact path=\"/about\">\n          <About/>\n        </Route>\n        <Route exact path=\"/\"> */}\n    <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n        {/* </Route> */}\n    {/* <TextForm heading=\"Enter the text to analyze below\"/> */}\n    {/* <About/> */}\n      {/* </Switch> */}\n    </div>\n    {/* </Router> */}\n    </> \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}